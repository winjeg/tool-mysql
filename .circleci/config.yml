version: 2.1
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: golang:1.17.5-buster
      - image: circleci/mysql:5.6.50
        environment:
          MYSQL_ROOT_PASSWORD: 4321zxcv
          MYSQL_DATABASE: test
          MYSQL_USER: testuser
          MYSQL_PASSWORD: 123456
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Waiting for MySQL to be ready
          command: |
            sleep 30
            echo done && exit 0
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            apt-get update && apt install -y default-mysql-client
            mysql -h 127.0.0.1 -u testuer -p123456 test < sql-data/dummy.sql
            mysql -h 127.0.0.1 -u testuer -p123456 --execute="CREATE TABLE `label` ( `id` int(11) unsigned NOT NULL COMMENT "the primary key", `name` varchar(64) NOT NULL DEFAULT "unknown" COMMENT "name", `age` tinyint(4) NOT NULL DEFAULT "0" COMMENT "age", `deleted` bit(1) NOT NULL , `note` varchar(255) DEFAULT NULL COMMENT "desc", `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT "created time", `updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "last updated", `personcol` float(5,3) unsigned DEFAULT NULL, `personcol2` double(6,3) DEFAULT NULL, `personcol1` decimal(3,2) DEFAULT NULL, `charcol` char(45) DEFAULT NULL, `textCol` mediumtext, `bitcol` bit(19) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `idx_id` (`id`), KEY `idx_name` (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT="table for person information";"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports

workflows:
  sample:
    jobs:
      - build
